import os
import yaml
from os import listdir
from os.path import isfile, join
import pathlib

SNAKEMAKE_DIR = os.path.dirname(workflow.snakefile)

configfile: "./config.yaml"

def splicemap5(wildcards):
    path = Path(config['splicemap_dir'])
    return [
        path / 'motor_neuron_splicemap_psi5_method=kn_event_filter=median_cutoff.csv.gz',
        path / 'Testis_splicemap_psi5_method=kn_event_filter=median_cutoff.csv.gz',
        path / 'Cells_Cultured_fibroblasts_splicemap_psi5_method=kn_event_filter=median_cutoff.csv.gz',
    ]

def splicemap3(wildcards):
    path = Path(config['splicemap_dir'])
    return [
        path / 'motor_neuron_splicemap_psi3_method=kn_event_filter=median_cutoff.csv.gz',
        path / 'Testis_splicemap_psi3_method=kn_event_filter=median_cutoff.csv.gz',
        path / 'Cells_Cultured_fibroblasts_splicemap_psi3_method=kn_event_filter=median_cutoff.csv.gz',
    ]


rule all:
    input:
        config['splicing_pred']['absplice_dna']


rule download_human_fasta:
    params:
        config['fasta']['url']
    output:
        config['fasta']['file']
    shell:
        "wget -O - {params} | gunzip -c > {output}"


rule mmsplice_splicemap:
    input:
        vcf = config['vcf'],
        fasta = config['fasta']['file'],
        splicemap_5 = splicemap5,
        splicemap_3 = splicemap3,
    output:
        result = config['splicing_pred']['mmsplice_splicemap']
    script:
        "./mmsplice_splicemap.py"


rule spliceai:
    input:
        vcf = config['vcf'],
        fasta = config['fasta']['file']
    params:
        genome = 'grch38'
    output:
        result = config['splicing_pred']['spliceai_vcf']
    shell:
        'spliceai -I {input.vcf} -O {output.result} -R {input.fasta} -A {params.genome}'

    
rule absplice_dna:
    input:
        mmsplice_splicemap = config['splicing_pred']['mmsplice_splicemap'],
        spliceai = config['splicing_pred']['spliceai_vcf'],
    output:
        absplice_dna = config['splicing_pred']['absplice_dna']
    script:
        "./absplice_dna.py"