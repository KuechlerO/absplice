import os
import yaml
from os import listdir
from os.path import isfile, join
import pathlib

config_download_path = f"{SNAKEMAKE_DIR}/download/config_download.yaml"
with open(config_download_path, "r") as fd:
    config_download = yaml.safe_load(fd)

configfile: "./config.yaml"

genome = config['genome']
vcf_ids = [file for file in listdir(os.path.dirname(config['vcf'])) if '.tbi' not in file]

if config['multisample_vcf']:
    rule rare_variants_from_vcf:
        input:
            vcf = config['vcf'],
            maf = ancient(config_download['gnomad_rocksdb'][genome]),
        params:
            filter_maf = config['variant_filtering']['minor_allele_frequency']['apply_filter'],
            filter_private = config['variant_filtering']['max_num_samples']['apply_filter'],
            maf_cutoff = config['variant_filtering']['minor_allele_frequency']['filter_cutoff'],
            max_num_samples = config['variant_filtering']['max_num_samples']['filter_cutoff'],
        conda:
            "../../../environment_gnomad_rocksdb.yaml"
        output:
            filtered_variants = config['variant_sample_map'],
        script:
            "./variants_from_vcf.py"
else:
    rule rare_variants_from_vcf_single_sample:
        input:
            vcf = config['vcf'],
            maf = ancient(config_download['gnomad_rocksdb'][genome]),
            vcf_DNA_ID = config['vcf_DNA_ID']
        params:
            filter_maf = config['variant_filtering']['minor_allele_frequency']['apply_filter'],
            maf_cutoff = config['variant_filtering']['minor_allele_frequency']['filter_cutoff'],
        conda:
            "../../../environment_gnomad_rocksdb.yaml"
        output:
            filtered_variants = config['variant_sample_map'],
        script:
            "./variants_from_vcf_single_sample.py"


rule all_rare_variants:
    input:
        expand(config['variant_sample_map'], vcf_id=vcf_ids)